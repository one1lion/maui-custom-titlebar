@page "/"

<h1>Hello, world!</h1>

<p>
    This is the setup for using the title bar customization API.  The title bar color should be different than the
    standard color, but only when running on Windows 11.  This is the effect I am going for.  I would also like to 
    be able to change this at runtime (using a theme switch and a state class that has <code>INotifyPropertyChanged</code>).
</p>
<p>
    The two files of interest are both in the Attempt project:
    <ul>
        <li>
            <code>App.xaml.cs</code> in the root of the project: Override the CreateWindow event to set the title. This
            can be done other places as well, but I decided to do it there.
        </li>
        <li>
            <code>App.xaml.cs</code> in the Platforms\Windows: Hook into the mapper for <code>IWindows</code> in the 
            constructor.  The function it performs is to activate the window as the platform-specific 
            (<code>Microsoft.UI.Xaml.Window</code>) Window, activate it so we can get the actual Window from the
            underlying operating system so that we can use the title bar customization API to change the various colors.
        </li>
    </ul>
    If only the app I am working on targeted only Windows 11 (or was only targeting mobile platforms), I'd be happy with 
    this result. Unfortunately, it does need to support previous versions of Windows as well.
</p>
<p>
    My original cries for help can be found
    <a href="" target="_blank">here (the first iteration of the question)</a> <i class="text-primary small oi oi-external-link"></i>
    and
    <a href="" target="_blank">here (the follow-up question after trying the recommendations)</a> <i class="text-primary small oi oi-external-link"></i>
</p>
<p>
    Some resources I used are:
    <ul>
        <li><a href="https://github.com/castorix/WinUI3_CustomCaption" target="_blank">WinUI sample by castorix</a> <i class="text-primary small oi oi-external-link"></i> - This provided a way to replace the title bar when running on Windows, but I don't know how to get the Blazor WebView in the window.  You can see the result in the <code>apply-castorix-sample</code> branch.</li>
        <li><a href="https://docs.microsoft.com/en-us/windows/apps/develop/title-bar?tabs=winui3" target="_blank">Title bar customization</a> <i class="text-primary small oi oi-external-link"></i> - This talks about using the Title bar customization API to do things like change the text and background color.  The issue is that it only works on Windows 11. The project I want to apply this to can run on prior versions of Windows. You can see this in the <code>win11-ftw</code> branch</li>
        <li><a href="https://github.com/dotnet/maui/pull/5811" target="_blank">Issue #5811 on the MAUI GitHub repo</a> <i class="text-primary small oi oi-external-link"></i> - This approach involved using a DataTemplate in the <code>App.xaml</code> file in the Windows platform folder.  It also uses a custom <code>MainWindow</code>, I think...and <code>ExtendsContentIntoTitleBar</code>.  I tried this briefly, but found the example hard to follow.  I attempted it again in the <code>data-template-try</code> branch.  The primary issue I had when trying this was that I couldn't figure out how to target the title bar to set change the color (the underlying thing that I am trying to accomplish), and the part that is no longer covered by part of the original title bar is not draggable.  I could be wrong about this since I haven't remade the project yet.  But that's what I'm doing next.  Hopfully I'll update this message after trying it.</li>
        <li><a href="https://docs.microsoft.com/en-us/dotnet/maui/fundamentals/app-lifecycle" target="_blank">Microsoft Doc on the App Lifecycle</a> <i class="text-primary small oi oi-external-link"></i> - I was pointed to this resource by James Montemagno today (relative to the time I am typing this out) and still need to review it.  It sounds like the primary takeaway from this document is to use the <code>lifecycle.AddWindows</code> to use the <code>ExtendsTitleIntoTitleBar</code> switch, which I talked about in the previous bullet.  I still need to read through the document, though, to see if there is more information that can help with the issue I ran into while trying to do that.</li>
    </ul>
</p>